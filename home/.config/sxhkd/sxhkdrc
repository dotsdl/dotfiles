#
# wm independent hotkeys
#
#


# avoid destroying firefox sessions
ctrl + q
    true

# screenshot
Print
    gnome-screenshot

# audio
XF86AudioRaiseVolume 
    pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
XF86AudioLowerVolume
    pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
XF86AudioMute 
    pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound
XF86AudioMicMute
    pactl set-source-mute @DEFAULT_SOURCE@ toggle # toggle microphone

# screen brightness
XF86MonBrightnessUp 
    light -A 5 # increase screen brightness
XF86MonBrightnessDown
    light -U 5 # increase screen brightness

# media player
super + ctrl + Right
    playerctl next
super + ctrl + Left
    playerctl previous
super + ctrl + Down
    playerctl play-pause
super + ctrl + Up
    playerctl stop

# hibernate
#XF86PowerOff
#    i3lock -c 000000 -u && sleep 1 && systemctl hibernate
XF86PowerOff
    systemctl hibernate

# lock screen
ctrl + shift + L
    i3lock -c 000000 -u && sleep 1 #&& xset dpms force off

# terminal emulator
super + Return
    termite

# web browser
#super + shift + {Return,p,b}
#    firejail --rlimit-as=5368709120 firefox {_,--private-window,-P broadcast}
super + shift + {Return,p,b}
    firefox {_,--private-window,-P broadcast}

# home folder
ctrl + shift + h
    nautilus -w

# glances
ctrl + shift + g
    termite -e glances

# program launcher
#super + @space
#    exec bash dmenu_run -b -sb '#106791' -sf '#dfdfdf' -nf '#dfdfdf' -nb '#222222'

super + @space
    exec bash dmenu_run -b -sb '#d0174a' -sf '#dfdfdf' -nf '#dfdfdf' -nb '#222222'

super + shift + @space
    rofi -show run

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
    bspc quit

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# swap the current node and the biggest node
super + g
    bspc node -s biggest.local

# flip y
super + y
    bspc node --flip vertical

# flip x
super + x
    bspc node --flip horizontal

# balance
super + u
    bspc node -B

# equalize
super + e
    bspc node -E

# rotate
super + {_,shift + }r
    bspc node -R {90,-90}

# change gap
#super + {_,shift +}n
#    bspc config window_gap $(($(bspc config window_gap) + {+3,-3}))

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
    bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus/swap the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# transplant the node in the given direction
super + ctrl + shift + {h,j,k,l}
    bspc node -n {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
    bspc node -f {next,prev}.local

# focus the next/previous node in the current desktop
alt + {_,shift + }Tab
    bspc node -f {next,prev}.local.leaf

# focus the next/previous node in any desktop
super + {_,shift + }Tab
    bspc node -f {next,prev}.leaf

# focus the last node in the current desktop
alt + grave
    bspc node -f last.local

# focus the last node in any desktop
super + grave
    bspc node -f last

# focus the next/previous desktop in the current monitor
super + {i,o}
    bspc desktop -f {prev,next}.local && bspc desktop last.local.!occupied -r

# move desktop
super + ctrl + {i,o}
    bspc desktop -s {prev,next}.local --follow

# switch to unoccupied desktop; take selected node with
super + d
    bspc desktop -f any.local.!occupied || bspc monitor -a neue && bspc desktop -f any.local.!occupied
super + shift + d
    bspc node -d any.local.!occupied --follow || bspc monitor -a neue && bspc node -d any.local.!occupied --follow

# move window to the next/previous desktop in the current monitor
super + shift + i
    bspc node -d prev.local --follow #; bspc desktop -f prev.local ; bspc node -f prev.local
super + shift + o
    bspc node -d next.local --follow #; bspc desktop -f next.local ; bspc node -f prev.local

# focus the older or newer node in the focus history
#super + {o,i}
#    bspc wm -h off; \
#    bspc node {older,newer} -f; \
#    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} 'focused:^{1-9,10}' --follow

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# hide
super + z
    bspc node focused -g hidden

# unhide
super + shift + z
    bspc node any.hidden.local -g hidden

#
# monitor
#
ctrl + alt + {_,super + }{j,k}
    bspc {monitor -f,desktop -m} {south,north} --follow

# move the node to monitor in the given direction
shift + ctrl + alt + {h,j,k,l}
    bspc node -m {west,south,north,east} --follow

# toggle focus color
super + {_,shift + }n
    
    bspc config focused_border_color {"#1793d0","#d0174a"}

# receptacle
#super + shift + Return
#    bspc node focused -i

# increase, decrease window gap
super + {_,shift +}n
    bspc config window_gap $(($(bspc config window_gap){+,-}5))

